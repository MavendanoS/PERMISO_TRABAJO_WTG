-- ============================================================================
-- SCRIPT DE VALIDACI√ìN - HISTORIAL DE APROBACIONES DE CIERRE
-- ============================================================================
-- Este script valida que la migraci√≥n 002 se haya aplicado correctamente
-- y que todas las funcionalidades del sistema de versionado funcionen.
-- ============================================================================

-- Configurar salida para mejor legibilidad
.mode column
.headers on
.width 30 15 20

SELECT '=== VALIDACI√ìN DE MIGRACI√ìN 002: HISTORIAL DE APROBACIONES ===' as titulo;

-- ============================================================================
-- 1. VALIDACI√ìN DE ESTRUCTURA DE BASE DE DATOS
-- ============================================================================

SELECT '1. VALIDANDO ESTRUCTURA DE BASE DE DATOS' as seccion;

-- Verificar existencia de tabla historial_aprobaciones_cierre
SELECT 
    'Tabla historial_aprobaciones_cierre' as componente,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úì EXISTE' 
        ELSE '‚úó NO ENCONTRADA' 
    END as status
FROM sqlite_master 
WHERE type='table' AND name='historial_aprobaciones_cierre';

-- Verificar columna version en permiso_cierre
SELECT 
    'Columna version en permiso_cierre' as componente,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úì EXISTE' 
        ELSE '‚úó NO ENCONTRADA' 
    END as status
FROM pragma_table_info('permiso_cierre') 
WHERE name = 'version';

-- Verificar √≠ndices creados
WITH indices_esperados AS (
    SELECT 'idx_historial_permiso_id' as indice
    UNION SELECT 'idx_historial_permiso_version'
    UNION SELECT 'idx_historial_accion' 
    UNION SELECT 'idx_historial_estado'
    UNION SELECT 'idx_historial_fecha_accion'
    UNION SELECT 'idx_historial_usuario'
    UNION SELECT 'idx_historial_permiso_fecha'
    UNION SELECT 'idx_permiso_cierre_version'
)
SELECT 
    e.indice as componente,
    CASE 
        WHEN s.name IS NOT NULL THEN '‚úì CREADO'
        ELSE '‚úó FALTANTE'
    END as status
FROM indices_esperados e
LEFT JOIN sqlite_master s ON s.name = e.indice AND s.type = 'index'
ORDER BY e.indice;

-- Verificar triggers creados
WITH triggers_esperados AS (
    SELECT 'trigger_increment_version_permiso_cierre' as trigger_name
    UNION SELECT 'trigger_historial_cambio_estado_cierre'
)
SELECT 
    e.trigger_name as componente,
    CASE 
        WHEN s.name IS NOT NULL THEN '‚úì CREADO'
        ELSE '‚úó FALTANTE'
    END as status
FROM triggers_esperados e
LEFT JOIN sqlite_master s ON s.name = e.trigger_name AND s.type = 'trigger'
ORDER BY e.trigger_name;

-- Verificar vistas creadas
WITH vistas_esperadas AS (
    SELECT 'vista_historial_cierre_completo' as vista
    UNION SELECT 'vista_estado_actual_cierres'
    UNION SELECT 'vista_analisis_rechazos'
    UNION SELECT 'vista_performance_supervisores'
)
SELECT 
    e.vista as componente,
    CASE 
        WHEN s.name IS NOT NULL THEN '‚úì CREADA'
        ELSE '‚úó FALTANTE'
    END as status
FROM vistas_esperadas e
LEFT JOIN sqlite_master s ON s.name = e.vista AND s.type = 'view'
ORDER BY e.vista;

-- ============================================================================
-- 2. VALIDACI√ìN DE DATOS MIGRADOS
-- ============================================================================

SELECT '2. VALIDANDO MIGRACI√ìN DE DATOS' as seccion;

-- Contar registros en tabla historial
SELECT 
    'Registros en historial_aprobaciones_cierre' as metrica,
    COUNT(*) as valor,
    CASE WHEN COUNT(*) > 0 THEN '‚úì DATOS MIGRADOS' ELSE '‚ö† SIN DATOS' END as status
FROM historial_aprobaciones_cierre;

-- Verificar que todos los permisos con cierre tengan historial
SELECT 
    'Permisos con cierre sin historial' as metrica,
    COUNT(*) as valor,
    CASE WHEN COUNT(*) = 0 THEN '‚úì TODOS MIGRADOS' ELSE '‚ö† FALTAN DATOS' END as status
FROM permiso_cierre pc
WHERE NOT EXISTS (
    SELECT 1 FROM historial_aprobaciones_cierre hac 
    WHERE hac.permiso_id = pc.permiso_id
);

-- Verificar versiones inicializadas
SELECT 
    'Permisos con version nula o 0' as metrica,
    COUNT(*) as valor,
    CASE WHEN COUNT(*) = 0 THEN '‚úì VERSIONES OK' ELSE '‚ö† VERSIONES FALTANTES' END as status
FROM permiso_cierre 
WHERE version IS NULL OR version = 0;

-- Distribuci√≥n de acciones en el historial
SELECT 
    'Distribuci√≥n de acciones' as seccion,
    accion as metrica,
    COUNT(*) as valor,
    'üìä INFO' as status
FROM historial_aprobaciones_cierre
GROUP BY accion
ORDER BY COUNT(*) DESC;

-- ============================================================================
-- 3. VALIDACI√ìN FUNCIONAL DE VISTAS
-- ============================================================================

SELECT '3. VALIDANDO FUNCIONALIDAD DE VISTAS' as seccion;

-- Probar vista_historial_cierre_completo
SELECT 
    'vista_historial_cierre_completo' as vista,
    COUNT(*) as registros,
    CASE WHEN COUNT(*) > 0 THEN '‚úì FUNCIONAL' ELSE '‚úó VAC√çA' END as status
FROM vista_historial_cierre_completo;

-- Probar vista_estado_actual_cierres
SELECT 
    'vista_estado_actual_cierres' as vista,
    COUNT(*) as registros,
    CASE WHEN COUNT(*) > 0 THEN '‚úì FUNCIONAL' ELSE '‚úó VAC√çA' END as status
FROM vista_estado_actual_cierres;

-- Probar vista_analisis_rechazos
SELECT 
    'vista_analisis_rechazos' as vista,
    COUNT(*) as registros,
    CASE WHEN COUNT(*) >= 0 THEN '‚úì FUNCIONAL' ELSE '‚úó ERROR' END as status
FROM vista_analisis_rechazos;

-- Probar vista_performance_supervisores
SELECT 
    'vista_performance_supervisores' as vista,
    COUNT(*) as registros,
    CASE WHEN COUNT(*) >= 0 THEN '‚úì FUNCIONAL' ELSE '‚úó ERROR' END as status
FROM vista_performance_supervisores;

-- ============================================================================
-- 4. VALIDACI√ìN DE INTEGRIDAD DE DATOS
-- ============================================================================

SELECT '4. VALIDANDO INTEGRIDAD DE DATOS' as seccion;

-- Verificar integridad referencial
SELECT 
    'Registros historial con permiso inexistente' as check_name,
    COUNT(*) as problemas,
    CASE WHEN COUNT(*) = 0 THEN '‚úì INTEGRIDAD OK' ELSE '‚úó PROBLEMAS' END as status
FROM historial_aprobaciones_cierre hac
WHERE NOT EXISTS (
    SELECT 1 FROM permisos_trabajo p WHERE p.id = hac.permiso_id
);

-- Verificar unicidad de version por permiso
SELECT 
    'Duplicados permiso_id + version_intento' as check_name,
    COUNT(*) as problemas,
    CASE WHEN COUNT(*) = 0 THEN '‚úì UNICIDAD OK' ELSE '‚úó DUPLICADOS' END as status
FROM (
    SELECT permiso_id, version_intento, COUNT(*) as duplicados
    FROM historial_aprobaciones_cierre
    GROUP BY permiso_id, version_intento
    HAVING COUNT(*) > 1
);

-- Verificar constraint de acciones v√°lidas
SELECT 
    'Acciones inv√°lidas en historial' as check_name,
    COUNT(*) as problemas,
    CASE WHEN COUNT(*) = 0 THEN '‚úì ACCIONES V√ÅLIDAS' ELSE '‚úó ACCIONES INV√ÅLIDAS' END as status
FROM historial_aprobaciones_cierre
WHERE accion NOT IN ('ENVIAR_CIERRE', 'APROBAR', 'RECHAZAR', 'REENVIAR', 'CANCELAR');

-- Verificar constraint de estados v√°lidos
SELECT 
    'Estados resultantes inv√°lidos' as check_name,
    COUNT(*) as problemas,
    CASE WHEN COUNT(*) = 0 THEN '‚úì ESTADOS V√ÅLIDOS' ELSE '‚úó ESTADOS INV√ÅLIDOS' END as status
FROM historial_aprobaciones_cierre
WHERE estado_resultante NOT IN ('CERRADO_PENDIENTE_APROBACION', 'CERRADO', 'CIERRE_RECHAZADO', 'CANCELADO');

-- ============================================================================
-- 5. VALIDACI√ìN DE PERFORMANCE
-- ============================================================================

SELECT '5. VALIDANDO PERFORMANCE DE CONSULTAS' as seccion;

-- Tiempo de consulta de historial por permiso (deber√≠a ser r√°pido con √≠ndices)
.timer on

SELECT 
    'Consulta historial por permiso' as consulta,
    'Tiempo medido por SQLite' as metrica,
    'Ver .timer arriba' as valor,
    'üìä PERFORMANCE' as status
FROM vista_historial_cierre_completo 
WHERE permiso_id IN (SELECT id FROM permisos_trabajo LIMIT 5)
LIMIT 1;

-- Consulta de estado actual (deber√≠a ser r√°pida)
SELECT 
    'Consulta estado actual' as consulta,
    'Tiempo medido por SQLite' as metrica,
    'Ver .timer arriba' as valor,
    'üìä PERFORMANCE' as status
FROM vista_estado_actual_cierres 
LIMIT 1;

.timer off

-- ============================================================================
-- 6. EJEMPLOS DE CONSULTAS √öTILES
-- ============================================================================

SELECT '6. EJEMPLOS DE CONSULTAS DEL SISTEMA' as seccion;

-- Top 5 permisos con m√°s historial
SELECT 
    'üìà Top 5 permisos con m√°s historial' as descripcion,
    numero_pt,
    planta_nombre,
    total_intentos,
    total_rechazos
FROM vista_estado_actual_cierres
ORDER BY total_intentos DESC
LIMIT 5;

-- Estad√≠sticas de rechazos por planta
SELECT 
    'üìä Rechazos por planta' as descripcion,
    planta_nombre,
    total_rechazos,
    permisos_con_rechazos
FROM vista_analisis_rechazos
ORDER BY total_rechazos DESC
LIMIT 5;

-- Performance de supervisores (si hay datos)
SELECT 
    'üë• Performance supervisores' as descripcion,
    supervisor,
    total_acciones,
    aprobaciones,
    rechazos,
    porcentaje_aprobacion || '%' as tasa_aprobacion
FROM vista_performance_supervisores
ORDER BY total_acciones DESC
LIMIT 5;

-- Historial reciente
SELECT 
    'üïí Actividad reciente (√∫ltimas 10 acciones)' as descripcion,
    numero_pt,
    accion,
    estado_resultante,
    usuario_nombre,
    fecha_accion
FROM vista_historial_cierre_completo
ORDER BY fecha_accion DESC
LIMIT 10;

-- ============================================================================
-- 7. RESUMEN DE VALIDACI√ìN
-- ============================================================================

SELECT '7. RESUMEN DE VALIDACI√ìN' as seccion;

-- Estado de la migraci√≥n
SELECT 
    migration_id as migracion,
    status as estado,
    applied_at as fecha_aplicacion
FROM migration_control 
WHERE migration_id = '002_historial_aprobaciones_cierre';

-- Estad√≠sticas finales
SELECT 
    'ESTAD√çSTICAS FINALES' as resumen,
    'Componente' as tipo,
    'Estado' as estado;

SELECT 
    'Base de Datos' as resumen,
    'Tablas, √çndices, Triggers, Vistas' as tipo,
    CASE 
        WHEN (SELECT COUNT(*) FROM sqlite_master WHERE name = 'historial_aprobaciones_cierre') > 0
        THEN '‚úì MIGRACI√ìN COMPLETA'
        ELSE '‚úó MIGRACI√ìN INCOMPLETA'
    END as estado;

-- ============================================================================
-- INSTRUCCIONES POST-VALIDACI√ìN
-- ============================================================================

SELECT '=== INSTRUCCIONES POST-VALIDACI√ìN ===' as titulo;

SELECT 
'Si todas las validaciones muestran ‚úì, la migraci√≥n fue exitosa.
Si hay problemas (‚úó o ‚ö†), revisar:
1. Logs de la migraci√≥n
2. Permisos de base de datos
3. Ejecutar nuevamente el script de aplicaci√≥n idempotente
4. Verificar integridad de datos origen

Para usar el sistema de historial:
- Consultar vista_historial_cierre_completo para auditor√≠a
- Usar vista_estado_actual_cierres para dashboards
- Los triggers registrar√°n cambios autom√°ticamente
- El campo version manejar√° concurrencia' as instrucciones;

SELECT '=== FIN DE VALIDACI√ìN ===' as titulo;

-- ============================================================================
-- FIN DEL SCRIPT DE VALIDACI√ìN
-- ============================================================================